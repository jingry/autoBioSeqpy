DLUPSE
============
Model Fusion for Predicting Unconventional Proteins Secreted by Exosomes using Deep Learning
============================================================================================

Author
=========
jingry@scu.edu.cn (R. Jing), ljs@swmu.edu.cn (J. Luo)

Overview
=============
DLUPSE is a model fusion framework involves the combination of multiple deep learning models to create a more accurate and robust model. To ensure diversity among the base models, various techniques are used, such as different architectures, loss functions, regularization techniques, and training data subsets. In this study, we carefully considered the base models, fusion method, and training strategies to achieve optimal performance. For sequential data, such as UPSE primary sequences, we encoded them using a dictionary-embedding representation and processed them through CNN layers to generate processed layer information containing local information from the convolution layers. Discrete feature groups, such as PSSM-based descriptors, were processed using DNN layers. We initially used the discrete feature groups for prediction separately using a DNN layer as the projection layer. We then concatenated all combinations of sequential and discrete features along the feature dimension for prediction. The CNNs were regarded as the core architecture of the model fusion framework, with different descriptor combinations of DNN used as supplementary information concatenated to the last fully connected layer of the core architecture. A total of 511 DNN models were generated by combining nine features (AAC-PSSM, DP-PSSM, DPC-PSSM, PSe-PSSM, PSSM-AC, PSSM400, SVD_PSSM, Single_Average, and DFMCA_PSSM) and concatenating them with the core structures. For instance, when using CNN as the core structure, the PSSM400 and PSe-PSSM of the DNN would concatenate three outputs before the last fully connected layer. Each training procedure was repeated five times to minimize the impact of random factors in sampling and model fitting. Overall, we conducted 2625 model training procedures, comprising 70 for a single model and 2555 for the fusion framework. There is still much to learn and explore about UPSEs, and we hope that our research will inspire further investigation in this fascinating field.

Usage
=========
In this study, a new tool called "generateCMD.py" has been developed for identifying the optimal model structure. This user-friendly method can be easily accessed by typing "python examples\exosomes\generateCMD.py" in the main autoBioSeqpy path. The results are displayed in the "OUT" folder, and the process is repeated five times to ensure accuracy. The final output is the average value, which represents the best model combination. Our analysis indicates that the "CNN+aac_pssm+DFMCA_PSSM+dpc_pssm+pssm400+pssm_ac" model achieved the best results. For those who wish to test this on a standalone test set, simply enter the following command under the main autoBioSeqpy path.

python running.py --dataType protein other other other other other --dataEncodingType dict other other other other other --dataTrainFilePaths examples/exosomes/data/trpos2992.txt examples/exosomes/data/trneg2961.txt examples/exosomes/data/po-aac_pssm.txt examples/exosomes/data/ne-aac_pssm.txt examples/exosomes/data/po-DFMCA_PSSM.txt examples/exosomes/data/ne-DFMCA_PSSM.txt examples/exosomes/data/po-dpc_pssm.txt examples/exosomes/data/ne-dpc_pssm.txt examples/exosomes/data/po-pssm400.txt examples/exosomes/data/ne-pssm400.txt examples/exosomes/data/po-pssm_ac.txt examples/exosomes/data/ne-pssm_ac.txt --dataTrainLabel 1 0 1 0 1 0 1 0 1 0 1 0 --dataTestFilePaths examples/exosomes/data/tepos2346.txt examples/exosomes/data/teneg3443.txt examples/exosomes/data/pote-aac_pssm.txt examples/exosomes/data/nete-aac_pssm.txt examples/exosomes/data/pote-DFMCA_PSSM.txt examples/exosomes/data/nete-DFMCA_PSSM.txt examples/exosomes/data/pote-dpc_pssm.txt examples/exosomes/data/nete-dpc_pssm.txt examples/exosomes/data/pote-pssm400.txt examples/exosomes/data/nete-pssm400.txt examples/exosomes/data/pote-pssm_ac.txt examples/exosomes/data/nete-pssm_ac.txt --dataTestLabel 1 0 1 0 1 0 1 0 1 0 1 0 --modelLoadFile examples/exosomes/model/CNN.py examples/exosomes/model/aac_pssm.py examples/exosomes/model/DFMCA_PSSM.py examples/exosomes/model/dpc_pssm.py examples/exosomes/model/pssm400.py examples/exosomes/model/pssm_ac.py --verbose 1 --outSaveFolderPath tmpOut --savePrediction 1 --saveFig 1 --batch_size 248 --epochs 20 --shuffleDataTrain 1 --spcLen 2000 20 210 400 240 200 --modelSaveName tmpMod.json --weightSaveName tmpWeight.bin --noGPU 0 --paraSaveName parameters.txt --optimizer optimizers.Adam(lr=0.001,amsgrad=False,decay=False) --dataTrainModelInd 0 0 1 1 2 2 3 3 4 4 5 5 --dataTestModelInd 0 0 1 1 2 2 3 3 4 4 5 5  

layerUMAP:
python tool/layerUMAP.py --paraFile tmpOut/parameters.txt --outFigFolder tmpOut --metric cosine --n_neighbors 28 --min_dist 0.8 --interactive 1 